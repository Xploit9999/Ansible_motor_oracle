---
# tasks file for motor_instalacion
- name: Importar tarea general para creacion ed grupos de relacion de confianza.
  include_tasks:
    file: /ansible/yml/tareas_generales/creacion_grupos.yml
  vars:
    usar_grupo_db: true

- name: Instalacion motor | Valida o crear directorio de Oracle home
  file:
    path: "{{ oracle_home }}"
    state: directory
    owner: ora19c
    group: oinstall
    mode: '0775'

- block:

  - name: Instalacion motor | Crea directorio temporal en oracle para logs
    file:
      path: "{{ oracle_tmp }}"
      state: directory
      owner: ora19c
      group: oinstall
      mode: '0775'

  - name: Instalacion motor | Envia y descomprimir el instalador del ora19c en la ruta de instalacion
    unarchive:
      src: "{{ instalador }}"
      dest: "{{ oracle_home }}"
      owner: ora19c
      group: oinstall

  - name: Instalacion motor | Contenido /etc/hosts
    slurp:
      src: /etc/hosts
    register: host

  - name: Instalacion motor | Encuentra coincidencias de las entradas VIP
    set_fact:
      formatear_vip: "{{ formatear_vip + item.split()[1] | regex_replace('-vip','') + ',' }}"
    loop: "{{ encontrar_vip }}"
    vars:
      formatear_vip: ''

  - name: Instalacion motor | Remueve delimitador final sobre las VIP
    set_fact:
      cluster: "{{ formatear_vip | regex_replace(',$', '') }}"

  - name: Instalacion motor | Envia template para e responsefile que se va a usar
    template:
      src: software_motor.rsp.j2
      dest: /tmp/software_motor.rsp

  - name: Instalacion motor | Ejecuta instalador del motor
    shell: ./runInstaller -silent -ignorePrereqFailure -responseFile /tmp/software_motor.rsp
    args:
      chdir: "{{ oracle_home }}"
    register: progreso
    failed_when: "'error' in progreso.stdout"
    ignore_errors: true

  when: inventory_hostname in groups['nodo1']
  become_user: ora19c
  environment:
    HOME: "{{ ora19c_home }}"
    CV_ASSUME_DISTID: "{{ dist }}"
    TMPDIR: "{{ oracle_tmp }}"
    TMP: "{{ oracle_tmp }}"
    LD_LIBRARY_PATH: "{{ oracle_home }}/lib"
    ORACLE_BASE: "{{ oracle_base }}"

- name: Instalacion motor | Ejecuta script de root
  shell: "{{ oracle_home }}/root.sh"
  register: segunda_parte

- debug:
    msg: "{{ segunda_parte.stdout }}"

- debug:
    msg: "Se ha completado con exito la instalacion del software del motor. ^ __ ^"
  changed_when: true

...
